#include <algorithm>
#include <iostream>
#include <time.h>
#include <vector>

int main()
{
	std::srand(time(NULL));

	size_t N;
	std::cin >> N;
	std::vector <std::vector <int> > A(N);

	for (size_t i = 0; i < N; i++)
	{
		for (size_t j = 0; j < i; j++)
		{
			while (A[i].size() == A[j].size() || A[i].size() == 0)
			{
				A[i].resize(std::rand() % 100 + 1);
			}
		}
	}

	for (size_t i = 0; i < N; i++)
	{
		for (size_t j = 0; j < A[i].size(); j++)
		{
			A[i][j] = std::rand() % 50 + 1;
		}
	}

	for (size_t i = 0; i < N; i++)
	{
		if (i % 2 == 0) std::sort(A[i].begin(), A[i].end());
		else std::sort(A[i].begin(), A[i].end(), [](int a, int b){return a > b;});
	}

	for (size_t i = 0; i < N; i++)
	{
		std::cout << "Massive №" << i <<"\n";
		for (size_t j = 0; j < A[i].size(); j++)
		{
			std::cout << A[i][j] << "\t";
		}
		std::cout << "\n";
	}
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
